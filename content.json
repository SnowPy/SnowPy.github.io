{"meta":{"title":"AiSweet的个人博客","subtitle":null,"description":"印堂黑过了乌鸦，流世的想法经过。婆娑过了百家，过隙恍恍半世多。","author":"AiSweet","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2019-07-29T09:10:53.000Z","updated":"2019-07-29T16:34:46.074Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-07-29T09:10:38.000Z","updated":"2019-07-29T16:34:29.586Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"pandas常用操作技巧","slug":"pandas常用操作技巧","date":"2020-04-21T12:11:23.000Z","updated":"2020-05-20T18:20:09.037Z","comments":true,"path":"2020/04/21/pandas常用操作技巧/","link":"","permalink":"http://yoursite.com/2020/04/21/pandas常用操作技巧/","excerpt":"汇总了一些常用的操作情景与技巧，持续更新","text":"汇总了一些常用的操作情景与技巧，持续更新 在DataFrame增加一行数据1234df.loc[df.shape[0]] = &#123;&quot;colum1&quot;: x1, &quot;colum2&quot;: x2 ...&#125;# 如果DataFrame已有columns，可简写为df.loc[df.shape[0]] = [x1,x2]","categories":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/categories/学习/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"pandas","slug":"pandas","permalink":"http://yoursite.com/tags/pandas/"}]},{"title":"基于Auto.js的手机自动化脚本","slug":"基于autojs的手机自动化脚本","date":"2019-09-13T13:10:09.000Z","updated":"2020-05-26T07:36:13.692Z","comments":true,"path":"2019/09/13/基于autojs的手机自动化脚本/","link":"","permalink":"http://yoursite.com/2019/09/13/基于autojs的手机自动化脚本/","excerpt":"本文简单介绍一下Auto.js，以及通过“京东叠蛋糕活动自动点击小天使脚本”为例对auto.js的应用进行演示。","text":"本文简单介绍一下Auto.js，以及通过“京东叠蛋糕活动自动点击小天使脚本”为例对auto.js的应用进行演示。 Auto.js介绍Auto.js是基于JavaScript的，通过Auto.js提供的API实现手机的“自动操作”。 Auto.js的开发与调试开发环境与准备工作手机上可以直接安装Auto.js的app，在里面开发和调试脚本。 电脑上可通过VS Code和手机Auto.js连接进行开发与调试。 为了便利，以下内容都是基于电脑平台。 1.在VS Code添加Auto.js扩展 2.确保电脑与手机在同一个网络下，在VS Code的命令面板(Ctrl+Shift+P)输入Auto.js:Start Server打开服务，然后在手机Auto.js输入电脑局域网IP连接电脑。 3.在VS Code编辑脚本并通过F5在手机运行与调试脚本（注：此处F5对应的是命令Auto.js:Run，而非VS Code的“启动调试”） 编程语言与API可直接参考官方文档和基础教程。Auto.js官方文档JavaScript基础教程Auto.js基础入门 京东叠蛋糕活动自动点击小天使脚本 情景：京东618叠蛋糕活动页面有一个金色的小天使，每点击五次会获得一些金币，然后小天使消失一段时间后再出现，每天最多可以点击150次，之后小天使将会消失。 每天150次的点击着实有些费时费力，于是我们可以借助Auto.js脚本让手机自动帮我们完成任务。对于这个问题，提供两种解决思路。 基于坐标的方法我们可以通过工具或在开发者选项里面打开手机坐标显示直接找到小天使在手机屏幕的坐标，然后设定好点击间隔即可。 12345678910111213141516171819202122console.show();log(&quot;请打开任务界面！&quot;);text(&quot;做任务领金币&quot;).waitFor();log(&quot;开始自动点击小金人...&quot;);sleep(1000);var i = 0;while(true)&#123; i++; log(&quot;第&quot;+i+&quot;次点击&quot;); click(坐标x,坐标y); //点击你找到的坐标 sleep(random(500,800)); //设定随机点击间隔，模拟人的行为 if(i % 5 == 0) &#123; sleep(7000); //等待小天使刷新 &#125; if(i == 150) &#123; log(&quot;今日小金人已点完！&quot;) break &#125;&#125; 基于控件的方法基于控件的操作是Auto.js的一大特色，我们可以通过手机Auto.js识别出当前屏幕上的所有控件，然后选中需要的控件获取控件信息，根据控件的属性就能定位到控件并对控件进行操作。 对于本次任务，因为活动页面无法选中控件获取控件信息，且京东在活动第三天对页面做了处理，无法基于坐标操作页面。因此我选择通过层级分析来定位控件获取控件信息，基于控件实现自动点击。 通过分析得出，小天使下面“点我得金币”text属性是唯一的，可以直接定位到该控件，但是控件的clickable属性是false，不可以对控件进行点击。我们把目标转向他的父控件，层级分析显示，它的父控件的父控件clickable属性是true，且在小天使区域内，那我们直接点击它就行了。 1234567891011121314151617181920212223242526console.show();log(&quot;请打开任务界面！&quot;);text(&quot;做任务领金币&quot;).waitFor();log(&quot;开始自动点击小金人...&quot;);sleep(1000);var i = 0;while(true)&#123; i++; var a = text(&quot;点我得金币&quot;).findOne(5000); //根据text属性定位到目标控件 if(a != null) &#123; log(&quot;第&quot;+i+&quot;次点击&quot;); a.parent().parent().click(); //点击它的父控件的父控件 sleep(random(500,800)); if(i % 5 == 0) &#123; sleep(7000); &#125; &#125; else &#123; log(&quot;今日小金人已点完！&quot;) break &#125;&#125; 结语可以把Auto.js当成是你的分身，当你在手机做一件冗杂、重复且精确的事情时，如：抢购，做任务，玩游戏，不妨考虑让Auto.js来代你完成。你还能给它设计好ui界面，打包成apk，分享给他人安装使用，这也是一大快事！","categories":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/categories/学习/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://yoursite.com/tags/JavaScript/"},{"name":"Auto.js","slug":"Auto-js","permalink":"http://yoursite.com/tags/Auto-js/"}]},{"title":"python-docx库","slug":"python-docx库","date":"2019-08-04T22:15:09.000Z","updated":"2019-08-05T09:26:14.616Z","comments":true,"path":"2019/08/05/python-docx库/","link":"","permalink":"http://yoursite.com/2019/08/05/python-docx库/","excerpt":"python-docx库主要用来对word文档进行相关操作","text":"python-docx库主要用来对word文档进行相关操作 库的安装：pip install python-docx 打开与保存文档12345from docx import Document# 打开文档，如果不写路径则创建一个临时的空文档document = Document(yourfilepath) document.save(tosavepath) # 保存文档 给文档里添加些内容添加段落123456789# 在文档末尾添加段落document.add_paragraph(yourcontent)# 如果想将段落插入到文档中间paragraph = document.add_paragraph(yourcontent)paragraph.insert_paragraph_before(yourcontent) # 以paragraph为cursor,将段落插在paragraph前面# 改变段落样式paragraph.style = &apos;List Bullet&apos; 添加标题12# 添加小标题，level参数设定标题为几级标题document.add_heading(heading,level=2) 添加分页符1document.add_page_break() 添加表格1234567891011121314151617# 插入表格document.add_table(rows=3,cols=3)# 给单元格添加内容table = document.add_table(rows=3,cols=3)cell = table.cell(0,1)cell.text = &apos;blank&apos;# 对行操作row = table.row[0]row.cells[0].text = &apos;iterable&apos;# 添加新行table.add_row()# 设置表格样式table.style = &apos;LightShading-Accent1&apos; # 其他样式名可以在网上获取 添加图片123456document.add_picture(path) #也可以传入图片的二进制形式，便于插入网络图片等# 设置图片尺寸from docx.shared import Inches document.add_picture(path,width=Inches(1.0)) #设定宽度为1英寸，高度会根据图片比例自动调节，也可以通过Cm类以厘米为单位 添加粗体和斜体及其他样式&#8195;&#8195;这个过程可以分为三个run，粗体文本之前的内容，产生粗体文本，粗体文本之后的内容。 1234567paragraph = document.add_paragraph(&apos;above &apos;)run = paragraph.add_run(&apos;bold content&apos;)run.bold = Trueparagraph.add_run(&apos; after&apos;) # 注意粗体文本前后需要由空格分开的情况# 类似的可以对run设定一些其他样式run.style = &apos;Emphasis&apos;","categories":[{"name":"学习","slug":"学习","permalink":"http://yoursite.com/categories/学习/"}],"tags":[{"name":"docx","slug":"docx","permalink":"http://yoursite.com/tags/docx/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]}]}